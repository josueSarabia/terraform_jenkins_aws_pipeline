pipeline {
    environment {
        imageName = "simple-web-server"
        customImage = ''
    }

    agent { label "jenkins-worker"}
    stages {


        /* stage('Start Container for Testing') {
            steps {
                script {
                    sh 'docker compose -f ./app/docker-compose.yml rm -f'
                    sh 'docker compose -f ./app/docker-compose.yml up -d webapp'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'docker exec webapp npm run test'
                }
            }
            post {
                success {
                    script {
                        sh 'docker compose -f ./app/docker-compose.yml down'
                    }
                }
                failure {
                    script {
                        sh 'docker compose -f ./app/docker-compose.yml down'
                    }
                }
            }
        } */

        stage ('Push revision') {
            steps {
                script {
                    sh 'echo $ECR_REPO_URL'
                    sh "echo $ECR_REPO_URL"
                    /* sh 'bash ./infra/terraform/scripts/replace_string.sh REPO_URL $ECR_REPO_URL ./infra/terraform/codedeploy_scripts/start_container.sh'
                    sh "bash ./infra/terraform/scripts/replace_string.sh COMMIT ${GIT_COMMIT} ./infra/terraform/codedeploy_scripts/start_container.sh"
                    sh 'cat ./infra/terraform/codedeploy_scripts/start_container.sh' */
                    /* sh 'aws deploy push \
                            --application-name SimpleWebPage \
                            --description "This is a revision for the application SimpleWebPage" \
                            --ignore-hidden-files \
                            --s3-location s3://artifacts-demo-bucket/codedeploy_scripts.zip \
                            --source ./infra/terraform/codedeploy_scripts/ \
                            --profile jenkins ' */
                }
            }
        }

        /* stage('Build Image') {
            steps {
                script {
                    // customImage = docker.build(imageName, "./app/")
                    sh "docker build -t '$ECR_REPO_URL'/${imageName}:${GIT_COMMIT} ./app/"
                }
            }
        }

        stage('Push to Registry') {
            // when {
            //    branch "main"
            // }
            steps {
                script {
                    // docker.withRegistry('', 'DockerhubCredentials') {
                        // customImage.push()
                    // }
                    sh 'aws ecr get-login-password --region us-east-1 --profile jenkins | docker login --username AWS --password-stdin $ECR_REPO_URL'
                    sh "docker push '$ECR_REPO_URL'/${imageName}:${GIT_COMMIT}"
                    sh "docker rmi '$ECR_REPO_URL'/${imageName}:${GIT_COMMIT}"
                }
            }
        } */

        /* stage('Deploy') {
            steps {
                script {
                    sh 'aws deploy create-deployment \
                        --application-name SimpleWebPage \
                        --deployment-group-name SimpleWebPage_deployment_group \
                        --s3-location bucket=artifacts-demo-bucket,key=codedeploy_scripts.zip,bundleType=zip \
                        --profile jenkins'
                }
            }
        } */
    }
}